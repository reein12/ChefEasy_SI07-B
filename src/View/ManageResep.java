/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Database.NotifDB;
import Database.ResepDB;
import Model.Notifikasi;
import Model.Resep;
import Model.ResepNasional;
import Model.ResepInternasional;
import Model.ValidasiInputException;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author armed
 */
public class ManageResep extends javax.swing.JFrame {

    private String username;

    /**
     * Creates new form DashboardFrame
     */
    public ManageResep(String username) {
        this.username = username;
        initComponents();
        loadData();
    }

    public ManageResep() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jAsal = new javax.swing.JComboBox<>();
        txtNama = new javax.swing.JTextField();
        txtBahan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLangkah = new javax.swing.JTextArea();
        txtPenulis = new javax.swing.JTextField();
        txtAsal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResep = new javax.swing.JTable();
        btnTambah = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblGambar = new javax.swing.JLabel();
        btnUploadGambar = new javax.swing.JButton();
        txtGambar = new javax.swing.JTextField();
        txtIdResep = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtKategori = new javax.swing.JLabel();
        btnNotif = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(50, 68, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 600));

        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Resep");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jAsal.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jAsal.setForeground(new java.awt.Color(255, 255, 255));
        jAsal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asal Daerah", "Negara Asal" }));
        jAsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAsalActionPerformed(evt);
            }
        });

        txtLangkah.setColumns(20);
        txtLangkah.setRows(5);
        jScrollPane1.setViewportView(txtLangkah);

        tblResep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "idResep", "Judul", "Kategori", "Bahan", "Langkah", "Penulis", "DaerahAsal", "NegaraAsal", "Gambar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblResep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResepMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblResep);

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblGambar.setPreferredSize(new java.awt.Dimension(131, 87));

        btnUploadGambar.setText("Upload Gambar");
        btnUploadGambar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadGambarActionPerformed(evt);
            }
        });

        txtGambar.setBackground(new java.awt.Color(50, 68, 50));
        txtGambar.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        txtGambar.setForeground(new java.awt.Color(255, 255, 255));
        txtGambar.setText("-");
        txtGambar.setBorder(null);

        txtIdResep.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        txtIdResep.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama");

        jLabel3.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Bahan");

        jLabel4.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Langkah");

        jLabel5.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Penulis");

        txtKategori.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        txtKategori.setForeground(new java.awt.Color(255, 255, 255));

        btnNotif.setText("Notifkasi");
        btnNotif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotifActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(btnNotif, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdResep))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBahan, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtAsal, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jAsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtKategori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(30, 30, 30)
                                        .addComponent(txtPenulis, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtGambar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGambar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUploadGambar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtIdResep)
                            .addComponent(btnNotif, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPenulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtBahan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3))
                                        .addGap(29, 29, 29)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jAsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtKategori))
                                        .addGap(12, 12, 12)
                                        .addComponent(txtAsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnUploadGambar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblGambar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGambar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTambah)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            // Mengambil data dari form
            String idResep = txtIdResep.getText();
            String nama = txtNama.getText();
            String bahan = txtBahan.getText();
            String langkah = txtLangkah.getText();
            String penulis = txtPenulis.getText();
            String gambar = txtGambar.getText();

            // Periksa pilihan pada combo box jAsal
            int selectedIndex = jAsal.getSelectedIndex();
            Resep resep;

            if (selectedIndex == 0) { // Jika Nasional
                String asalDaerah = txtAsal.getText(); // Text field untuk asal daerah
                resep = new ResepNasional(nama, "nasional", bahan, langkah, penulis, asalDaerah);
            } else if (selectedIndex == 1) { // Jika Internasional
                String negaraAsal = txtAsal.getText(); // Text field untuk negara asal
                resep = new ResepInternasional(nama, "internasional", bahan, langkah, penulis, negaraAsal);
            } else {
                JOptionPane.showMessageDialog(this, "Pilihan asal tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Panggil fungsi updateData
            ResepDB resepDB = new ResepDB();
            resepDB.updateData(resep, gambar, Integer.parseInt(idResep));

            // Tampilkan pesan berhasil
            JOptionPane.showMessageDialog(this, "Data berhasil diperbarui!", "Success", JOptionPane.INFORMATION_MESSAGE);

            // Refresh data tabel
            loadData();

        } catch (ValidasiInputException e) {
            JOptionPane.showMessageDialog(this, "Validasi gagal: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        try {
            // Mengambil data dari form
            String nama = txtNama.getText();
            String bahan = txtBahan.getText();
            String langkah = txtLangkah.getText();
            String penulis = txtPenulis.getText();
            String gambar = txtGambar.getText();

            // Periksa pilihan pada combo box jAsal
            int selectedIndex = jAsal.getSelectedIndex();
            Resep resep;

            if (selectedIndex == 0) { // Jika Nasional
                String asalDaerah = txtAsal.getText(); // Text field untuk asal daerah
                resep = new ResepNasional(nama, "nasional", bahan, langkah, penulis, asalDaerah);
            } else if (selectedIndex == 1) { // Jika Internasional
                String negaraAsal = txtAsal.getText(); // Text field untuk negara asal
                resep = new ResepInternasional(nama, "internasional", bahan, langkah, penulis, negaraAsal);
            } else {
                JOptionPane.showMessageDialog(this, "Pilihan asal tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Panggil fungsi tambaData
            ResepDB resepDB = new ResepDB();
            resepDB.tambaData(resep, gambar);

            // Tampilkan pesan berhasil
            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!", "Success", JOptionPane.INFORMATION_MESSAGE);
            NotifDB notiDB = new NotifDB();
            Notifikasi notif = new Notifikasi("Data " + nama + " berhasil ditambahkan!", username);
            notiDB.addKomentar(notif);
            loadData();

            // Reset form setelah menambahkan
            resetForm();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void resetForm() {
        txtIdResep.setText("");
        txtNama.setText("");
        txtNama.setText("");
        txtBahan.setText("");
        txtLangkah.setText("");
        txtPenulis.setText("");
        txtAsal.setText("");
        jAsal.setSelectedIndex(0);
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            // Ambil ID Resep dari txtIdResep
            String idResep = txtIdResep.getText();

            if (idResep.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Konfirmasi penghapusan
            int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // Panggil fungsi deleteData
                ResepDB resepDB = new ResepDB();
                resepDB.deleteData(Integer.parseInt(idResep));

                // Tampilkan pesan berhasil
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus!", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Refresh data tabel
                loadData();

                // Reset form
                resetForm();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUploadGambarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadGambarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg", "gif", "png");
        fileChooser.addChoosableFileFilter(filter);
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            txtGambar.setText(path);
            tampilGambar(path);

        }
    }//GEN-LAST:event_btnUploadGambarActionPerformed

    private void tampilGambar(String path) {
        File file = new File(path);

        // Validasi apakah file ada
        if (!file.exists()) {
            lblGambar.setIcon(null);
            lblGambar.setText("Gambar tidak ditemukan");
            return;
        }

        try {
            // Membaca file gambar dari path
            byte[] img = Files.readAllBytes(file.toPath());
            ImageIcon imageIcon = new ImageIcon(img);

            // Dimensi label
            int labelWidth = 131;
            int labelHeight = 87;

            // Menghitung skala gambar agar sesuai dengan label
            int imageWidth = imageIcon.getIconWidth();
            int imageHeight = imageIcon.getIconHeight();

            double scaleX = (double) labelWidth / (double) imageWidth;
            double scaleY = (double) labelHeight / (double) imageHeight;
            double scale = Math.min(scaleX, scaleY);

            // Melakukan scaling pada gambar
            Image scaledImage = imageIcon.getImage().getScaledInstance((int) (scale * imageWidth), (int) (scale * imageHeight), Image.SCALE_SMOOTH);

            // Menampilkan gambar ke label
            lblGambar.setIcon(new ImageIcon(scaledImage));
            lblGambar.setText(""); // Hapus teks jika gambar berhasil ditampilkan
        } catch (IOException ex) {
            ex.printStackTrace();
            lblGambar.setIcon(null);
            lblGambar.setText("Gagal memuat gambar");
        }
    }

    private void tblResepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResepMouseClicked
        // Ambil baris yang dipilih di tabel
        int selectedRow = tblResep.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data dari tabel terlebih dahulu!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Ambil data dari tabel dan masukkan ke text field
        txtIdResep.setText(tblResep.getValueAt(selectedRow, 0).toString());
        txtNama.setText(tblResep.getValueAt(selectedRow, 1).toString());
        txtKategori.setText(tblResep.getValueAt(selectedRow, 2).toString());
        txtBahan.setText(tblResep.getValueAt(selectedRow, 3).toString());
        txtLangkah.setText(tblResep.getValueAt(selectedRow, 4).toString());
        txtPenulis.setText(tblResep.getValueAt(selectedRow, 5).toString());
        txtGambar.setText(tblResep.getValueAt(selectedRow, 8).toString());

        // Tentukan asal berdasarkan tipe resep
        String tipeResep = tblResep.getValueAt(selectedRow, 6).toString();
        if (tipeResep.equals("Internasional")) {
            jAsal.setSelectedIndex(1);
            txtAsal.setText(tblResep.getValueAt(selectedRow, 7).toString()); // Negara asal
        } else if (tipeResep.equals("Nasional")) {
            jAsal.setSelectedIndex(0);
            txtAsal.setText(tblResep.getValueAt(selectedRow, 7).toString()); // Asal daerah
        } else {
            jAsal.setSelectedIndex(-1);
            txtAsal.setText("");
        }
        tampilGambar(txtGambar.getText());
    }//GEN-LAST:event_tblResepMouseClicked

    private void jAsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAsalActionPerformed
        if (jAsal.getSelectedIndex() == 0) {
            txtKategori.setText("nasional");
        } else if (jAsal.getSelectedIndex() == 1) {
            txtKategori.setText("internasional");
        }
    }//GEN-LAST:event_jAsalActionPerformed

    private void btnNotifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotifActionPerformed
        NotifikasiFrame notif = new NotifikasiFrame(username);
        notif.setVisible(true);
    }//GEN-LAST:event_btnNotifActionPerformed

    private void loadData() {
        // Panggil metode showData dari ResepService
        ResepDB resepDB = new ResepDB();
        List<Resep> resepList = resepDB.showData();

        // Clear tabel sebelum memuat data baru
        DefaultTableModel model = (DefaultTableModel) tblResep.getModel();
        model.setRowCount(0);

        // Loop melalui data resep dan tambahkan ke tabel
        for (Resep resep : resepList) {
            Object[] row;
            if (resep instanceof ResepInternasional) {
                ResepInternasional internasional = (ResepInternasional) resep;
                row = new Object[]{
                    internasional.getIdResep(),
                    internasional.getNama(),
                    internasional.getKategori(),
                    internasional.getBahan(),
                    internasional.getLangkah(),
                    internasional.getPenulis(),
                    "-",
                    internasional.getNegaraAsal(),
                    internasional.getGambar()
                };
            } else if (resep instanceof ResepNasional) {
                ResepNasional nasional = (ResepNasional) resep;
                row = new Object[]{
                    nasional.getIdResep(),
                    nasional.getNama(),
                    nasional.getKategori(),
                    nasional.getBahan(),
                    nasional.getLangkah(),
                    nasional.getPenulis(),
                    nasional.getAsalDaerah(),
                    "-",
                    nasional.getGambar()
                };
            } else {
                continue;
            }

            model.addRow(row);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageResep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageResep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageResep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageResep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageResep().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNotif;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUploadGambar;
    private javax.swing.JComboBox<String> jAsal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGambar;
    private javax.swing.JTable tblResep;
    private javax.swing.JTextField txtAsal;
    private javax.swing.JTextField txtBahan;
    private javax.swing.JTextField txtGambar;
    private javax.swing.JLabel txtIdResep;
    private javax.swing.JLabel txtKategori;
    private javax.swing.JTextArea txtLangkah;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtPenulis;
    // End of variables declaration//GEN-END:variables
}
